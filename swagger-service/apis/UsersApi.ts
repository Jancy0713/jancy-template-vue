// tslint:disable
/**
 * Express.js Backend API
 * 一个专为前端工程师设计的Express.js后端API模板
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    ApiResponse,
    ApiUsersIdPutRequest,
    ErrorResponse,
    UserInput,
} from '../models';

export interface ApiUsersIdDeleteRequest {
    id: number;
}

export interface ApiUsersIdGetRequest {
    id: number;
}

export interface ApiUsersIdPutRequest {
    id: number;
    apiUsersIdPutRequest: ApiUsersIdPutRequest;
}

export interface ApiUsersPostRequest {
    userInput: UserInput;
}

/**
 * no description
 */
export class UsersApi extends BaseAPI {

    /**
     * 获取系统中所有用户的列表
     * 获取所有用户
     */
    apiUsersGet(): Observable<ApiResponse>
    apiUsersGet(opts?: OperationOpts): Observable<AjaxResponse<ApiResponse>>
    apiUsersGet(opts?: OperationOpts): Observable<ApiResponse | AjaxResponse<ApiResponse>> {
        return this.request<ApiResponse>({
            url: '/api/users',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * 根据用户ID删除用户
     * 删除用户
     */
    apiUsersIdDelete({ id }: ApiUsersIdDeleteRequest): Observable<ApiResponse>
    apiUsersIdDelete({ id }: ApiUsersIdDeleteRequest, opts?: OperationOpts): Observable<AjaxResponse<ApiResponse>>
    apiUsersIdDelete({ id }: ApiUsersIdDeleteRequest, opts?: OperationOpts): Observable<ApiResponse | AjaxResponse<ApiResponse>> {
        throwIfNullOrUndefined(id, 'id', 'apiUsersIdDelete');

        return this.request<ApiResponse>({
            url: '/api/users/{id}'.replace('{id}', encodeURI(id)),
            method: 'DELETE',
        }, opts?.responseOpts);
    };

    /**
     * 根据用户ID获取用户详细信息
     * 获取单个用户
     */
    apiUsersIdGet({ id }: ApiUsersIdGetRequest): Observable<ApiResponse>
    apiUsersIdGet({ id }: ApiUsersIdGetRequest, opts?: OperationOpts): Observable<AjaxResponse<ApiResponse>>
    apiUsersIdGet({ id }: ApiUsersIdGetRequest, opts?: OperationOpts): Observable<ApiResponse | AjaxResponse<ApiResponse>> {
        throwIfNullOrUndefined(id, 'id', 'apiUsersIdGet');

        return this.request<ApiResponse>({
            url: '/api/users/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * 根据用户ID更新用户信息
     * 更新用户信息
     */
    apiUsersIdPut({ id, apiUsersIdPutRequest }: ApiUsersIdPutRequest): Observable<ApiResponse>
    apiUsersIdPut({ id, apiUsersIdPutRequest }: ApiUsersIdPutRequest, opts?: OperationOpts): Observable<AjaxResponse<ApiResponse>>
    apiUsersIdPut({ id, apiUsersIdPutRequest }: ApiUsersIdPutRequest, opts?: OperationOpts): Observable<ApiResponse | AjaxResponse<ApiResponse>> {
        throwIfNullOrUndefined(id, 'id', 'apiUsersIdPut');
        throwIfNullOrUndefined(apiUsersIdPutRequest, 'apiUsersIdPutRequest', 'apiUsersIdPut');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<ApiResponse>({
            url: '/api/users/{id}'.replace('{id}', encodeURI(id)),
            method: 'PUT',
            headers,
            body: apiUsersIdPutRequest,
        }, opts?.responseOpts);
    };

    /**
     * 创建一个新的用户账户
     * 创建新用户
     */
    apiUsersPost({ userInput }: ApiUsersPostRequest): Observable<ApiResponse>
    apiUsersPost({ userInput }: ApiUsersPostRequest, opts?: OperationOpts): Observable<AjaxResponse<ApiResponse>>
    apiUsersPost({ userInput }: ApiUsersPostRequest, opts?: OperationOpts): Observable<ApiResponse | AjaxResponse<ApiResponse>> {
        throwIfNullOrUndefined(userInput, 'userInput', 'apiUsersPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<ApiResponse>({
            url: '/api/users',
            method: 'POST',
            headers,
            body: userInput,
        }, opts?.responseOpts);
    };

}
